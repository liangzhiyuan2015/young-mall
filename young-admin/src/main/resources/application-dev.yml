spring:
  datasource:
    url: jdbc:mysql://localhost:3306/young-shop?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: yqz12358
    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码
        login-username: druid
        login-password: druid

  # redisTemplate使用，可用于普通缓存
  redis:
    host: 106.54.139.18  # Redis服务器地址
    password: redis12358 # Redis服务器连接密码（默认为空）
    port: 6379 # Redis服务器连接端口
    database: 8 # Redis数据库索引（默认为0）
    timeout: 300 #连接超时时间（毫秒）

      #在1.x.x的版本时默认使用的jedis客户端，现在是2.x.x版本默认使用的lettuce客户端
      # Jedis和Lettuce都是Redis Client
      # Jedis 是直连模式，在多个线程间共享一个 Jedis 实例时是线程不安全的，
      # 如果想要在多线程环境下使用 Jedis，需要使用连接池，
      # 每个线程都去拿自己的 Jedis 实例，当连接数量增多时，物理连接成本就较高了。
      #    jedis:
      #      shutdown-timeout: 300ms #关闭超时
      #      pool:
      #        max-active: 600 #连接池最大连接数（使用负值表示没有限制）
      #        max-wait: 1000 #连接池最大阻塞等待时间（使用负值表示没有限制）
      #        max-idle: 300 #连接池中的最大空闲连接

    # Lettuce的连接是基于Netty的，连接实例可以在多个线程间共享，
    # 所以，一个多线程的应用可以使用同一个连接实例，而不用担心并发线程的数量。
    # 当然这个也是可伸缩的设计，一个连接实例不够的情况也可以按需增加连接实例。
    # 通过异步的方式可以让我们更好的利用系统资源，而不用浪费线程等待网络或磁盘I/O。
    # Lettuce 是基于 netty 的，netty 是一个多线程、事件驱动的 I/O 框架，
    # 所以 Lettuce 可以帮助我们充分利用异步的优势
    lettuce:
      shutdown-timeout: 300ms #关闭超时
      pool:
        max-active: 20 #连接池最大连接数（使用负值表示没有限制）
        max-wait: 1000 #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 300  #连接池中的最大空闲连接
        min-idle: 0   #连接池中的最小空闲连接

#  redisson使用，redisson分布式锁
#    redisson:
#      config: classpath:redisson.yml

